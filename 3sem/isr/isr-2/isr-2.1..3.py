# Выполнил: Чернявка Никита, ИВТ, 2 курс, 1 группа 2 подргуппа
# Вариант: 8
#4, 1, 22 / 12, 8

# Задание 1,2

# Описание задачи

  # Логическая задача. Требуется для двух или трех входных переменных (A, B, C) построить таблицы истинности (см. свой вариант):
  # 4. (A∨B)∧(¬A∨¬B)
  # 1. Штрих Шефферса
  # 22. ¬(¬(A∧B)∨A↔B)∨¬A
  

  # Следующая функция рисует табличку. Так, как в варианте не имеются задания на три переменные, в конце будет отрисована пустая табличка формата трёх переменных
def setTable(n, elem):

  if n == 2:
    print("╔═══╦═══╦═══╗\n║ A ║ B ║ F ║\n╠═══╬═══╬═══╣\n", end='')
  elif n == 3:
    print("╔═══╦═══╦═══╦═══╗\n║ A ║ B ║ C ║ F ║\n╠═══╬═══╬═══╬═══╣")
  else:
    return -1

  for i in range(n**2 - 1):

    print("║", end='')
    for j in range(n + 1):
      print(" {} ║".format(elem[i][j]), end='')
    if i != n**2 - 2:
      print("\n╠═══" + "╬═══" * n + "╣")
  if n == 2:
    print("\n╚═══╩═══╩═══╝")
  else:
    print("\n╚═══╩═══╩═══╩═══╝")
  print()

print("\n4. (A∨B)∧(¬A∨¬B)")
el = [[None]*3, [None]*3, [None]*3, [None]*3]
for i in range(4):

  if i < 2:
    el[i][0] = 0
  else:
    el[i][0] = 1

  el[i][1] = i % 2
  
  if (el[i][0] or el[i][1]) and (not el[i][0] or not el[i][1]):
    el[i][2] = 1
  else:
    el[i][2] = 0

setTable(2, el)

print("\n1. Штрих Шефферса (¬(A∧B))")
el = [[None]*3, [None]*3, [None]*3, [None]*3]
for i in range(4):

  if i < 2:
    el[i][0] = 0
  else:
    el[i][0] = 1

  el[i][1] = i % 2
  
  if not (el[i][0] and el[i][1]):
    el[i][2] = 1
  else:
    el[i][2] = 0

setTable(2, el)

print("\n22. ¬(¬(A∧B)∨A↔B)∨¬A = (¬(A∧B)∨A↔B)∧A")
el = [[None]*3, [None]*3, [None]*3, [None]*3]
for i in range(4):

  if i < 2:
    el[i][0] = 0
  else:
    el[i][0] = 1

  el[i][1] = i % 2

  if (not (el[i][0] and el[i][1]) or el[i][0] == el[i][1]) and el[i][0]:
    el[i][2] = 1
  else:
    el[i][2] = 0

setTable(2, el)

print("\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\nДемонстрация пустой таблицы истинности для трёх элементов для второго задания")
el = [[' ']*4]*8

setTable(3, el)

# Задание 3

# Описание задачи

  # Дан список: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946
  # Для данного списка, используя слайсы, обращение к элементам по 
  # индексу, методы sum(), min(), max(), арифметические операторы (не используя циклы или условные операторы) найдите:
  
  # 12. Сумму всех элементов элементов списка с элементами, стоящими на четных местах в его первой половине.
  # 8. Список элементов, стоящих на нечетных позициях в первой половине списка в обратном порядке.

elem = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946]
print("\n12. Сумму всех элементов элементов списка с элементами, стоящими на четных местах в его первой половине:")
print(sum(elem[1:int(len(elem) / 2):2]))
print("\n8. Список элементов, стоящих на нечетных позициях в первой половине списка в обратном порядке:")
print(list(reversed(elem[0:int(len(elem) / 2):2])))
